version: '3.7'

services:

# Workspace Container
    workspace:
      container_name: your_project_workspace
      build:
        context: ./env/docker/workspace
        args:
          - PHP_VERSION=${PHP_VERSION}
          - PHP_XDEBUG_ENABLE=${PHP_XDEBUG_ENABLE}
          - PHP_XDEBUG_VERSION=${PHP_XDEBUG_VERSION}
          - PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK}
          - COMPOSER_PROCESS_TIMEOUT=${COMPOSER_PROCESS_TIMEOUT}
      volumes:
        - ./:/var/www:cached
        - ~/.ssh:/home/laradock/.ssh
        - ~/.config/composer:/home/laradock/.config/composer
        - ~/.aws:/home/laradock/.aws
      tty: true
      networks:
        - your_project_network

# PHP-FPM
    php-fpm:
      container_name: your_project_php_fpm
      build:
        context: ./env/docker/php-fpm
        args:
          - PHP_VERSION=${PHP_VERSION}
          - PHP_XDEBUG_ENABLE=${PHP_XDEBUG_ENABLE}
          - PHP_XDEBUG_VERSION=${PHP_XDEBUG_VERSION}
          - PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK}
      volumes:
        - ./:/var/www:cached
      depends_on:
        - workspace
      networks:
        - your_project_network

# NGINX
    nginx:
      container_name: your_project_nginx
      build:
        context: ./env/docker/nginx
      volumes:
        - ./:/var/www:cached
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      depends_on:
        - php-fpm
        - mysqldb
      environment:
        - HTTPS_METHOD=${HTTPS_METHOD}
      ports:
        - 80:80
      networks:
        - your_project_network

# NGINX-FRONTEND
    nginx-front:
      container_name: your_project_nginx-frontend
      build:
        context: ./env/docker/nginx-angular
      volumes:
        - ./front:/var/www/html:cached
        - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      environment:
        - HTTPS_METHOD=${HTTPS_METHOD}
      ports:
        - 8080:8080
      networks:
        - your_project_network

# MySQL
    mysqldb:
      image: mysql:${MYSQL_VERSION}
      container_name: your_project_mysql
      restart: always
      env_file:
          - ".env"
      environment:
          - MYSQL_DATABASE=${MYSQL_DATABASE}
          - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
          - MYSQL_USER=${MYSQL_USER}
          - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      ports:
          - "8989:3306"
      volumes:
          - ".${DATA_PATH_HOST}mysql:/var/lib/mysql"
      networks:
        - your_project_network
# Redis
    redis:
      container_name: your_project_redis
      image: "redis"
      hostname: your_project_redis
      networks:
        - your_project_network

# Volumes configuration
volumes:
  postgres:
    driver: "local"

# Network configuration
networks:
  your_project_network:
    name: your_project_network
